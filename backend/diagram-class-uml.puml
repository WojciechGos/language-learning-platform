@startuml
'https://plantuml.com/class-diagram

class Group {
    -id: Long
    -name: String
    -description: String
    -members: List<Student>
    -teacher: Teacher
    +addMember(user: User): void
    +removeMember(user: User): void
    +updateDescription(description: String): void
    +getMembers(): List<Student>
    +getGroupDetails(): String
}
class User {
    -id: Long
    -firstName: String
    -lastName: String
    -email: String
    -password: String
    +login(username, password): boolean
    +logout(): void
}

class Language {
    -id: Long
    -name: String
    -level: LanguageLevel
}

enum LanguageLevel {
    A1
    A2
    B1
    B2
    C1
    C2
}

LanguageLevel -* Language
Language -* Student

class Student {
    -languageList : List<Language>
    +enrollCourse(course: Course): void
    +takeLessonQuiz(lesson: Lesson): void
}

class Teacher {
    -id: Long
    -specialization: String
    +createCourse(course: Course): void
    +assignHomework(lesson: Lesson, homework: Homework): void
}

class Course {
    -id: Long
    -name: String
    -description: String
    -studentId: Long
    -language: String
    -level: String
    -lessons:List<Lesson>
    +addLesson(lesson: Lesson): void
    +removeLesson(lesson: Lesson): void
}

class Lesson {
    -id: Long
    -name: String
    -description: String
    -taskContent: String
    -taskList: List<Excercise>
    -quiz: Quiz
    +completeLesson(student: Student): void
}

class Option {
    -id: Long
    -content: String
}

abstract class Excercise {
    -name: String
    -content: String
    -points: int
}
class Task {
    -Long id
    -description: String
    -Excercises: List<Excercise>
    -Options: List<Option>
}

class GrammarExcercise extends Excercise {
    -id: Long

}
class FillInBlanksExcercise extends Excercise {
    -id: Long
}
class MultipleChoiceExcercise extends Excercise {
    -id: Long
    -answer: List<Option>
}
class TrueFalseExcercise extends Excercise {
    -id: Long
    -answer: Option
}
class SentenceCompletionExcercise extends Excercise {
    -id: Long
    - answer: Option
}


Task -* Lesson
Task o-- Option
Excercise -* Task
User <|-- Student
User <|-- Teacher
Course "1" *-- "many" Lesson
Student "many" -- "many" Course : enrolls
Teacher --* Group
Student --* Group

@enduml